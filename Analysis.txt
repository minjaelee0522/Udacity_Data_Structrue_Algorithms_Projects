Task0
First record of texts, <incoming number> texts <answering number> at time <time> -> O(1)
Last record of calls, <incoming number> calls <answering number> at time <time>, lasting <during> seconds -> O(5213)




Task1

numbers1 -> O(9072)
numbers2 -> O(9072)
numbers3 -> O(5213)
numbers4 -> O(5213)
TOTAL -> O(28570)






Task2

records = {}
for call in calls: -> O(9072)
    if call[0] in records:
        records[call[0]] += int(call[3])
    else:
        records[call[0]] = int(call[3])
    if call[1] in records:
        records[call[1]] += int(call[3])
    else:
        records[call[1]] = int(call[3])

longest = max(records, key=lambda i:records[i])

O(9072)











Task3


codes = []
for call in calls:   -> O(9072)
    if call[0][:5] == "(080)":
        if call[1][:2] == "(0":
            codes.append(call[1].split(')')[0] + ')')
        elif call[1][0] == "7" or "8" or "9":
            codes.append(call[1][:4])
        elif call[1][3] == "140":
            codes.append(call[1][3])

print("The numbers called by people in Bangalore have codes:")
set_codes = set(codes)
for i in set_codes: -> O(39)
    print(i)

bang = []
for call in calls: -> O(9072)
    if call[0][:5] == "(080)":
        bang.append(call[0][:5])

count = 0
for call in calls: -> O(9072)
    if call[0][:5] == "(080)":
        if call[1][:5] == "(080)":
            count += 1
print("\n{0} percent of calls from fixed lines in Bangalore are calls to other fixed lines in Bangalore.".format(round(count/len(bang)*100, 2)))


O(9072 + 39 + 9072 + 9072) = 











Task4


numbers1 = []
numbers2 = []
for number in texts:
    numbers1.append(number[0])  ->  O(9072)
    numbers2.append(number[1])  ->  O(9072)


numbers3 = []
numbers4 = []
for number in calls:
    numbers3.append(number[0])  -> O(5213)
    numbers4.append(number[1])  -> O(5213)

n1 = set(numbers1 + numbers2 + numbers4)
n2 = set(numbers3)

tel = []
for num in n2:   ->  O(479)
    if num not in n1:   ->  o(527)
        tel.append(num)

print("These numbers could be telemarketers: ")
for i in sorted(tel):  -> o(43)
    print(i)
 O(9072 + 9072 + 5213 + 5213 + 479 + 527 + 43) = O(29619)